name: Node.js CI/CD for Local Multi-Node Cluster

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: nisha2706/nodejs-app
      K8S_NAMESPACE: default
      KIND_CLUSTER_NAME: local-cluster

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Run tests
      - name: Run Jest Tests
        run: npm test

      # 5Ô∏è‚É£ Lint code
      - name: ESLint
        run: npx eslint src/ --max-warnings=0

      # 6Ô∏è‚É£ Build Docker image
      - name: Build Docker Image
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          echo "Commit SHA: $COMMIT_SHA"
          docker build --build-arg COMMIT_SHA=$COMMIT_SHA -t $DOCKER_IMAGE:$COMMIT_SHA .
          docker tag $DOCKER_IMAGE:$COMMIT_SHA $DOCKER_IMAGE:latest

      # 7Ô∏è‚É£ Push Docker image
      - name: Push Docker Image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          docker push $DOCKER_IMAGE:$COMMIT_SHA
          docker push $DOCKER_IMAGE:latest

      # 8Ô∏è‚É£ Scan Docker image with Trivy (report only)
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          severity: HIGH,CRITICAL
          exit-code: 0
          ignore-unfixed: true

      # 9Ô∏è‚É£ Setup kubectl (for local kind cluster)
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'

      # üîü Load image into all Kind worker nodes
      - name: Load Docker image into Kind nodes
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          echo "Loading image into all worker nodes..."
          kind load docker-image $DOCKER_IMAGE:$COMMIT_SHA --name $KIND_CLUSTER_NAME --nodes kind-worker1 --nodes kind-worker2

      # 1Ô∏è‚É£1Ô∏è‚É£ Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)

          # Replace image tag in deployment YAML
          sed -i "s|image: $DOCKER_IMAGE:latest|image: $DOCKER_IMAGE:$COMMIT_SHA|g" k8s/deployment.yaml

          # Apply manifests
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

          # Wait for rollout to finish
          kubectl rollout status deployment/nodejs-app -n $K8S_NAMESPACE

          # Optional: verify pods
          kubectl get pods -o wide

